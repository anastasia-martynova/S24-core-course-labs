name: CI-Workflow

on:
  push:
    paths:
      - 'app_python/**'
      - '.github/workflows/main.yml'
  pull_request:
    paths:
      - 'app_python/**'
      - '.github/workflows/main.yml'

defaults:
  run:
    working-directory: app_python

jobs:
  build_and_test:
    timeout-minutes: 2
    runs-on: ubuntu-22.04
    name: Build and test

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.11'
        cache: 'pip'


    - name: Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Tests
      run: |
        python -m pytest test.py 

  lint:
    timeout-minutes: 2
    runs-on: ubuntu-22.04
    name: lint with flake8

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.11'
        cache: 'pip'

    - name: Lint
      run: |
        pip install flake8
        flake8 app.py test.py

  docker-push:
    timeout-minutes: 3
    runs-on: ubuntu-22.04
    name: Push Docker image to Docker Hub

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Sign in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: build and push
      uses: docker/build-push-action@v5
      with:
        context: app_python
        file: ./app_python/Dockerfile
        push: true
        tags: ${{ secrets.DOCKERHUB_USERNAME }}/moscow-time-app:latest
        cache-from: type=gha
        cache-to: type=gha,mode=max

  snyk:
    timeout-minutes: 3
    runs-on: ubuntu-22.04
    name: Snyk Vulnerability Checks

    steps:
    - name: Checkout
      uses: actions/checkout@v4
    - name: Snyk
      uses: snyk/actions/python@master
      with:
          args: --skip-unresolved app_python/
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}